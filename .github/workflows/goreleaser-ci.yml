name: goreleaser
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    outputs:
      metadata: ${{ steps.goreleaser-step.outputs.metadata }}
      artifacts: ${{ steps.goreleaser-step.outputs.artifacts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
      - name: Run GoReleaser
        id: goreleaser-step
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLAB_CLIENT_SECRET: ${{ secrets.GITLAB_CLIENT_SECRET }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
  publish:
    name: Build and push CLI container
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
      security-events: write
      actions: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::312272277431:role/github-actions/buildx-deployments
        role-session-name: PluralCLI
    - name: setup kubectl
      uses: azure/setup-kubectl@v3
    - name: Get EKS credentials
      run: aws eks update-kubeconfig --name pluraldev
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/pluralsh/plural-cli
          gcr.io/pluralsh/plural-cli
        # dkr.plural.sh/plural/plural-cli
        # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{version}}
    - name: Set up Docker Buildx
      id: builder
      uses: docker/setup-buildx-action@v2
      with:
        driver: kubernetes
        platforms: linux/amd64
        driver-opts: |
          namespace=buildx
          requests.cpu=1.5
          requests.memory=3.5Gi
          "nodeselector=plural.sh/scalingGroup=buildx-spot-x86"
          "tolerations=key=plural.sh/capacityType,value=SPOT,effect=NoSchedule;key=plural.sh/reserved,value=BUILDX,effect=NoSchedule"
    - name: Append ARM buildx builder from AWS
      run: |
        docker buildx create \
          --append \
          --bootstrap \
          --name ${{ steps.builder.outputs.name }} \
          --driver=kubernetes \
          --platform linux/arm64 \
          --node=${{ steps.builder.outputs.name }}-arm64 \
          --buildkitd-flags "--allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host" \
          --driver-opt namespace=buildx \
          --driver-opt requests.cpu=1.5 \
          --driver-opt requests.memory=3.5Gi \
          '--driver-opt="nodeselector=plural.sh/scalingGroup=buildx-spot-arm64"' \
          '--driver-opt="tolerations=key=plural.sh/capacityType,value=SPOT,effect=NoSchedule;key=plural.sh/reserved,value=BUILDX,effect=NoSchedule"'
    - uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/${{ secrets.GOOGLE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
        service_account: 'terraform@pluralsh.iam.gserviceaccount.com'
        token_format: 'access_token'
        create_credentials_file: true
    - uses: google-github-actions/setup-gcloud@v1.0.1
    - name: Login to gcr
      run: gcloud auth configure-docker -q
    - name: Login to plural registry
      uses: docker/login-action@v2
      with:
        registry: dkr.plural.sh
        username: mjg@plural.sh
        password: ${{ secrets.PLURAL_ACCESS_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Get current date
      id: date
      run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%S%z')" >> $GITHUB_OUTPUT
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: "."
        file: "./Dockerfile"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        # cache-from: type=gha
        # cache-to: type=gha,mode=max
        build-args: |
            APP_VSN=${{ github.ref_name }}
            APP_COMMIT=${{ github.sha }}
            APP_DATE=${{ steps.date.outputs.date }}
    - name: Run Trivy vulnerability scanner on cli image
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'image'
        image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        hide-progress: false
        format: 'sarif'
        output: 'trivy-results.sarif'
        security-checks: 'vuln'
        ignore-unfixed: true
          #severity: 'CRITICAL,HIGH'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
  publish-cloud:
    name: Build and push CLI cloud container
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
      security-events: write
      actions: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::312272277431:role/github-actions/buildx-deployments
        role-session-name: PluralCLI
    - name: setup kubectl
      uses: azure/setup-kubectl@v3
    - name: Get EKS credentials
      run: aws eks update-kubeconfig --name pluraldev
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/pluralsh/plural-cli-cloud
          gcr.io/pluralsh/plural-cli-cloud
        # dkr.plural.sh/plural/plural-cli-cloud
        # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{version}}
    - name: Set up Docker Buildx
      id: builder
      uses: docker/setup-buildx-action@v2
      with:
        driver: kubernetes
        platforms: linux/amd64
        driver-opts: |
          namespace=buildx
          requests.cpu=1.5
          requests.memory=3.5Gi
          "nodeselector=plural.sh/scalingGroup=buildx-spot-x86"
          "tolerations=key=plural.sh/capacityType,value=SPOT,effect=NoSchedule;key=plural.sh/reserved,value=BUILDX,effect=NoSchedule"
    - name: Append ARM buildx builder from AWS
      run: |
        docker buildx create \
          --append \
          --bootstrap \
          --name ${{ steps.builder.outputs.name }} \
          --driver=kubernetes \
          --platform linux/arm64 \
          --node=${{ steps.builder.outputs.name }}-arm64 \
          --buildkitd-flags "--allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host" \
          --driver-opt namespace=buildx \
          --driver-opt requests.cpu=1.5 \
          --driver-opt requests.memory=3.5Gi \
          '--driver-opt="nodeselector=plural.sh/scalingGroup=buildx-spot-arm64"' \
          '--driver-opt="tolerations=key=plural.sh/capacityType,value=SPOT,effect=NoSchedule;key=plural.sh/reserved,value=BUILDX,effect=NoSchedule"'
    - uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/${{ secrets.GOOGLE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
        service_account: 'terraform@pluralsh.iam.gserviceaccount.com'
        token_format: 'access_token'
        create_credentials_file: true
    - uses: google-github-actions/setup-gcloud@v1.0.1
    - name: Login to gcr
      run: gcloud auth configure-docker -q
    - name: Login to plural registry
      uses: docker/login-action@v2
      with:
        registry: dkr.plural.sh
        username: mjg@plural.sh
        password: ${{ secrets.PLURAL_ACCESS_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Get current date
      id: date
      run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%S%z')" >> $GITHUB_OUTPUT
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: "."
        file: "./dockerfiles/Dockerfile.cloud"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        # cache-from: type=gha
        # cache-to: type=gha,mode=max
        build-args: |
            APP_VSN=${{ github.ref_name }}
            APP_COMMIT=${{ github.sha }}
            APP_DATE=${{ steps.date.outputs.date }}
    - name: Run Trivy vulnerability scanner on cli cloud image
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'image'
        image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        hide-progress: false
        format: 'sarif'
        output: 'trivy-results.sarif'
        security-checks: 'vuln'
        ignore-unfixed: true
          #severity: 'CRITICAL,HIGH'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
